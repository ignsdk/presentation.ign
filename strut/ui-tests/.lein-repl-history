(set-driver! {:browser :firefox} "http://localhost:9000")
(click "a.logo.btn")
(click "a.logo.btn a:first")
(click ".logo-group > ul > li a:first")
(click ".logo-group > ul > li > a")
(click ".logo-group > ul > li a")
(execute-script "return 1")
(css-finder ".logo-group > ul > li a")
(displayed? (css-finder ".logo-group > ul > li a"))
(displayed? ".logo-group > ul > li a")
(displayed? ".logo-group > ul > li a:first")
(displayed? ".logo-group > ul > li a")
(displayed? ".logo-group > ul")
(use ['clj-webdriver.taxi :as t])
(use ['clj-webdriver.taxi :as s])
(use '[clj-webdriver.taxi :as s])
s/click
(use '[clj-webdriver.taxi :as s] [clojure.string])
(use '[clj-webdriver.taxi :as s] [clojure.string :as t])
(use '[clj-webdriver.taxi :as s] '[clojure.string :as t])
(use '[ui-tests.access.logo-menu])
(use '[u.access.logo-menu])
(use '[ui-tests.access.logo-menu])
(clojure.string)
(require 'clojure.string)
(clojure.string)
(require 'clojure.string)
(clojure.string/split "fdg")
(clojure.string/split "fdg" "")
(clojure.string/split "fdg" "" )
(clojure.string/split "fdg" ",")
(clojure.string/split "fdg" /,/)
(clojure.string/split "fdg" #",")
(use 'ui-tests.access.logo-menu)
(use 'ui-tests.core)
(use 'clojure.contrib.strint)
(def x 1)
(<< "a ~{x}")
(:use 'clj-webdriver.taxi)
(set-driver! {:browser :firefox} "http://localhost:9000")
(select ".slideWell")
(select ".slideContainer")
(select "div")
(print (select ".slideWell"))
(select ".slideContainer")
(click "a.logo.btn")
(select "a.logo.btn")
(find-element "a.logo.btn")
(find-element {:css "a.logo.btn"})
(find-elements {:css "a.logo.btn"})
(click (find-elements {:css "a.logo.btn"}))
(click (find-element {:css "a.logo.btn"}))
(reverse '(1 2 3))
(decr 2)
(dec 2)
(count slides)
(count '(1 2 3))
(select ".slideContainer .component")
(verify true)
(double-click 1)
(->actions)
(actions)
(use 'clj-webdriver.core)
(use '[clj-webdriver.core :as wdc])
(require 'clj-webdriver.core)
(clj-webdriver.core/->actions)
(clj-webdriver.core/->actions double-click)
(clj-webdriver.core/->actions clj-webdriver.core/double-click)
(clj-webdriver.core/->actions clj-webdriver.core/double-click  "")
(require '[clj-webdriver.taxi :as t])
(t/find-element "div")
(t/find-element {:css "div"})
t
(t
)
(t/click "div")
(t/set-driver! {:browser :firefox})
(t/find-element {:css "div"})
(require '[clj-webdriver.taxi :as t])
(require '[clj-webdriver.core :as c])
(c/action->)
(c/actions->)
(c/->actions)
(assert 1 1)
(assert 1 2)
(assert 2 1)
(assert (= 2 1))
(assert (= 1 1))
